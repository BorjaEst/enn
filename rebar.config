%% == Erlang Compiler ==
%% Erlang files to compile before the rest. Rebar automatically compiles
%% parse_transforms and custom behaviours before anything other than the files
%% in this list.
{erl_opts, [no_debug_info]}.


%% == Common Test ==
%% {erl_opts, [...]}, but for CT runs
{ct_compile_opts, []}.
%% {erl_first_files, ...} but for CT runs
{ct_first_files, []}.
%% Same options as for ct:run_test(Opts) (sys_config is extra)
{ct_opts, [{sys_config, ["./config/ct.config"]}]}.


%% == Dependencies ==
%% What dependencies we have, dependencies can be of 3 forms, an application
%% name as an atom, eg. mochiweb, a name and a version (from the .app file), or
%% an application name, a version and the SCM details on how to fetch it (SCM
%% type, location and revision).
%% Rebar3 currently supports git and hg
{deps, [
    {edb,     {git, "git://github.com/BorjaEst/edb.git",     {branch, "master"}}},
    {datalog, {git, "git://github.com/BorjaEst/datalog.git", {branch, "master"}}},
    {numerl,  {git, "git://github.com/BorjaEst/numerl.git",  {tag, "1.0.0"}}}
]}.


%% == Shell ==
%% apps to auto-boot with `rebar3 shell'; defaults to apps
%% specified in a `relx' tuple, if any.
{shell, [
    {config, "./config/ct.config"},
    {apps,   [enn]}
]}.


%% == Profiles ==
{profiles, [
    {prod, [
        {erl_opts, [no_debug_info, warnings_as_errors]},
        {relx, [
            {dev_mode,     false},
            {include_erts, true},
            {sys_config,   "./config/prod.config"}
        ]}
    ]},
    {test, [
        {deps, []},
        {erl_opts, [
            debug_info, 
            nowarn_export_all, 
            {d, debug_mode}
        ]}
    ]}
]}.
